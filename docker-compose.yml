version: "3.9"
services:
  caddy:
    image: caddy:2
    configs:
      - source: caddyfile
        target: /etc/caddy/Caddyfile
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: ingress
      - target: 443
        published: 443
        protocol: tcp
        mode: ingress
    volumes:
      - caddy:/data
    networks:
      - lmtnet

  db:
    image: postgres:14
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      - lmtnet

  geoserver:
    image: docker.osgeo.org/geoserver:2.21.2
    environment:
      - GEOSERVER_CSRF_WHITELIST=landscapes.wearepal.ai
      - EXTRA_JAVA_OPTS=-Xmx10g
    volumes:
      - geoserver:/opt/geoserver_data
    networks:
      - lmtnet

  queue:
    image: redis:7
    command: redis-server --appendonly yes
    volumes:
      - redis_queue:/data
    networks:
      - lmtnet

  migration:
    image: "wearepal/landscapes:${VERSION}"
    command: bin/run-migrations
    secrets:
      - secret_key_base
    deploy:
      restart_policy:
        condition: none
    networks:
      - lmtnet

  web:
    image: "wearepal/landscapes:${VERSION}"
    command: bin/run-server
    logging:
      driver: "json-file"
      options:
        max-size: "1G"
    secrets:
      - secret_key_base
    volumes:
      - storage:/app/storage
    networks:
      - lmtnet

  worker:
    image: "wearepal/landscapes:${VERSION}"
    command: bin/run-worker
    stop_signal: SIGQUIT
    logging:
      driver: "json-file"
      options:
        max-size: "1G"
    secrets:
      - secret_key_base
    volumes:
      - storage:/app/storage
    networks:
      - lmtnet

configs:
  caddyfile:
    external: true
    name: landscapes_caddyfile

secrets:
  secret_key_base:
    external: true
    name: landscapes_secret_key_base

volumes:
  caddy:
  geoserver:
  postgres:
  redis_queue:
  storage:


networks:
  lmtnet:
